syntax = "proto3";

import "google/protobuf/timestamp.proto";

package twitter;

option go_package = "fenek.sso.v1;ssov1";

// -----------------Auth service-----------------

// Auth is service for managing permissions and roles.
service AuthService {
  // Register registers a new user.
  rpc Register (RegisterRequest) returns (RegisterResponse);
  // Login logs in a user and returns an auth token.
  rpc Login (LoginRequest) returns (LoginResponse);

  rpc Verify (VerifyRequest) returns (VerifyResponse);
}

message RegisterRequest {
  string username = 1;
  string password = 2;
}

message RegisterResponse {
  string token = 1;
}

message LoginRequest {
  string username = 1;
  string password = 2;
}

message LoginResponse {
  string token = 1;
}

message VerifyRequest {
  string token = 1;
}

message VerifyResponse {
  User user = 1;
}


// -----------------Cache service-----------------


service CacheService {
  rpc CreateTweet(CreateTweetRequest) returns (CreateTweetResponse);
  rpc DeleteTweet(DeleteTweetRequest) returns (DeleteTweetResponse);
  rpc FindTweetById(FindTweetByIdRequest) returns (FindTweetByIdResponse);
  rpc FindUserById(FindUserByIdRequest) returns (FindUserByIdResponse);
  rpc SaveUser(SaveUserRequest) returns (SaveUserResponse);
  rpc UpdateTweet(UpdateTweetRequest) returns (UpdateTweetResponse);
}

message Tweet {
  string id = 1;
  string content = 2;
  string username = 3;
  google.protobuf.Timestamp created_at = 4;
  google.protobuf.Timestamp updated_at = 5;
}

message User {
  string username = 1;
  string description = 2;
  google.protobuf.Timestamp created_at = 3;
  google.protobuf.Timestamp updated_at = 4;
}

message CreateTweetRequest {
  string username = 1;
  string content = 2;
}

message CreateTweetResponse {
  Tweet tweet = 1;
}

message DeleteTweetRequest {
  string id = 1;
}

message DeleteTweetResponse {
  string id = 1;
}

message FindTweetByIdRequest {
  string id = 1;
}

message FindTweetByIdResponse {
  Tweet tweet = 1;
}

message FindUserByIdRequest {
  string id = 1;
}

message FindUserByIdResponse {
  User user = 1;
}

message SaveUserRequest {
  string username = 1;
  bytes pass_hash = 2;
}

message SaveUserResponse {
  string user_id = 1;
}

message UpdateTweetRequest {
  string id = 1;
  string content = 2;
}

message UpdateTweetResponse {
  Tweet tweet = 1;
}
